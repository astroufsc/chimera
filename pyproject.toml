[project]
name = "chimera"
version = "0.2"
description = "Chimera - Observatory Automation System"
readme = "README.rst"
license = "GPL-2.0-or-later"
authors = [
    { name = "Paulo Henrique Silva", email = "ph.silva@gmail.com" },
    { name = "William Schoenell", email = "wschoenell@gmail.com" },
]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Astronomy",
]

requires-python = ">=3.13"
dependencies = [
    "astropy>=6.1.3",
    "msgspec>=0.19.0",
    "numpy>=2.1.1",
    "pyephem>=9.99",
    "pynng>=0.8.1",
    "python-dateutil>=2.9.0.post0",
    "pyyaml>=6.0.2",
    "rich>=13.9.4",
    "sqlalchemy==1.4",
]

[project.urls]
homepage = "https://chimera.readthedocs.org"
source = "https://github.com/astroufsc/chimera"

[project.scripts]
chimera = "chimera.cli.chimera:main"
chimera-cam = "chimera.cli.cam:main"
chimera-filter = "chimera.cli.filter:main"
chimera-tel = "chimera.cli.tel:main"
chimera-dome = "chimera.cli.dome:main"
chimera-focus = "chimera.cli.focus:main"
chimera-sched = "chimera.cli.sched:main"
chimera-weather = "chimera.cli.weather:main"
chimera-seeing = "chimera.cli.seeing:main"

[build-system]
requires = ["uv_build>=0.7.19,<0.8.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "memray>=1.18.0",
    "pre-commit>=4.1.0",
    "pystack>=1.5.1; sys_platform == 'linux'",
    "pytest-cover>=3.0.0",
    "pytest-memray>=1.8.0",
    "pytest-mock>=3.14.1",
    "pytest>=8.3.3",
    "ruff>=0.9.4",
]
docs = ["furo>=2024.8.6", "sphinx>=8.1.3"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--import-mode=importlib --cov --cov-branch --cov-report=html -sv --continue-on-collection-errors"

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = ["N", "I", "UP", "F"]

[tool.ruff.lint.flake8-copyright]
notice-rgx = "(?i)# SPDX-FileCopyrightText:\\s\\d{4}(-(\\d{4}|present))*"
